from circomlibpy.poseidon import PoseidonHash
from circomlibpy.merkle_tree import MerkleTree


def test_poseidon():
    poseidon = PoseidonHash()
    res = poseidon.hash(2, [123456, 7890])
    assert res == 11751760964675091942946575063357494784340102798683992336036224596111230645648


def test_merkle_tree():
    leafs = [
        [204011724553963167053348543897637937531897174136708817686947783459599286272, 0, 0, 0, 1],
        [172055371854937261077917624410164910518943165870675603720251173435380596736, 0, 0, 0, 2],
        [172062273601284051641705059166027187544395616979647774106806335959604396032, 0, 0, 0, 3],
        [172069175347630842205492493921889464569848068088619944493361498483828195328, 0, 0, 0, 4],
        [172076077093977632769279928677751741595300519197592114879916661008051994624, 0, 0, 0, 5]]
    mtree = MerkleTree(leafs)
    path, order = mtree.gen_proof(0)
    assert mtree.root == 3693852034816220969980398025931646744713742489852125909138985185751997118833
    assert path == [
        12181380747766530663019567607642183183842923227107503250029079799455572184768,
        14752333704901535729870671529802743390978931851983497868673528090961169705309,
        16538135409515176547194568220928820916682786764828918280336228751737583509415,
        11286972368698509976183087595462810875513684078608517520839298933882497716792,
        3607627140608796879659380071776844901612302623152076817094415224584923813162,
        19712377064642672829441595136074946683621277828620209496774504837737984048981,
        20775607673010627194014556968476266066927294572720319469184847051418138353016,
        3396914609616007258851405644437304192397291162432396347162513310381425243293,
    ]
    assert order == [0, 0, 0, 0, 0, 0, 0, 0]


if __name__ == '__main__':
    test_poseidon()
    test_merkle_tree()
    print('OK!')
